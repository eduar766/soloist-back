"""Initial migration - create all tables

Revision ID: 113c638261b9
Revises: 
Create Date: 2025-09-04 12:55:11.933626

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '113c638261b9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('role', sa.Enum('FREELANCER', 'CLIENT', 'ADMIN', name='userrole'), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'SUSPENDED', name='userstatus'), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('billing_name', sa.String(length=255), nullable=True),
    sa.Column('billing_email', sa.String(length=255), nullable=True),
    sa.Column('billing_address', sa.Text(), nullable=True),
    sa.Column('billing_city', sa.String(length=100), nullable=True),
    sa.Column('billing_state', sa.String(length=100), nullable=True),
    sa.Column('billing_country', sa.String(length=100), nullable=True),
    sa.Column('billing_postal_code', sa.String(length=20), nullable=True),
    sa.Column('tax_id', sa.String(length=50), nullable=True),
    sa.Column('preferences', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('clients',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'ARCHIVED', name='clientstatus'), nullable=True),
    sa.Column('contact_name', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('mobile', sa.String(length=50), nullable=True),
    sa.Column('website', sa.String(length=500), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('tax_id', sa.String(length=50), nullable=True),
    sa.Column('company_type', sa.String(length=100), nullable=True),
    sa.Column('industry', sa.String(length=100), nullable=True),
    sa.Column('default_currency', sa.String(length=3), nullable=True),
    sa.Column('default_hourly_rate', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('payment_terms', sa.Enum('NET_30', 'NET_15', 'NET_60', name='paymentterms'), nullable=True),
    sa.Column('custom_payment_terms', sa.String(length=255), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('archived_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user_profiles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('owner_id', 'name', name='unique_client_name_per_owner')
    )
    op.create_index('idx_clients_owner_name', 'clients', ['owner_id', 'name'], unique=False)
    op.create_index('idx_clients_status', 'clients', ['status'], unique=False)
    op.create_table('shares',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('resource_type', sa.Enum('PROJECT', 'INVOICE', name='shareabletype'), nullable=False),
    sa.Column('resource_id', sa.Integer(), nullable=False),
    sa.Column('share_type', sa.Enum('PUBLIC', 'PRIVATE', name='sharetype'), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'EXPIRED', 'REVOKED', name='sharestatus'), nullable=True),
    sa.Column('share_token', sa.String(length=255), nullable=False),
    sa.Column('share_url', sa.String(length=500), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('custom_message', sa.Text(), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('max_access_count', sa.Integer(), nullable=True),
    sa.Column('access_count', sa.Integer(), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('require_email', sa.Boolean(), nullable=True),
    sa.Column('allow_anonymous', sa.Boolean(), nullable=True),
    sa.Column('permissions', sa.JSON(), nullable=True),
    sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('revoke_reason', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_accessed', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user_profiles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('share_token')
    )
    op.create_index('idx_shares_expires', 'shares', ['expires_at'], unique=False)
    op.create_index('idx_shares_owner', 'shares', ['owner_id'], unique=False)
    op.create_index('idx_shares_resource', 'shares', ['resource_type', 'resource_id'], unique=False)
    op.create_index('idx_shares_status', 'shares', ['status'], unique=False)
    op.create_index('idx_shares_token', 'shares', ['share_token'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('project_type', sa.Enum('FIXED_PRICE', 'TIME_AND_MATERIALS', 'RETAINER', name='projecttype'), nullable=True),
    sa.Column('status', sa.Enum('PLANNING', 'ACTIVE', 'ON_HOLD', 'COMPLETED', 'CANCELLED', name='projectstatus'), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('billing_type', sa.Enum('HOURLY', 'FIXED', 'RETAINER', name='billingtype'), nullable=True),
    sa.Column('hourly_rate', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('fixed_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('budget_hours', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('budget_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('auto_create_invoices', sa.Boolean(), nullable=True),
    sa.Column('invoice_frequency', sa.String(length=20), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('archived_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['user_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_projects_dates', 'projects', ['start_date', 'end_date'], unique=False)
    op.create_index('idx_projects_owner_client', 'projects', ['owner_id', 'client_id'], unique=False)
    op.create_index('idx_projects_status', 'projects', ['status'], unique=False)
    op.create_table('share_access_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('share_id', sa.Integer(), nullable=False),
    sa.Column('accessor_email', sa.String(length=255), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('accessed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['share_id'], ['shares.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_share_access_logs_date', 'share_access_logs', ['accessed_at'], unique=False)
    op.create_index('idx_share_access_logs_share', 'share_access_logs', ['share_id'], unique=False)
    op.create_table('invoices',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('invoice_number', sa.String(length=50), nullable=False),
    sa.Column('invoice_type', sa.Enum('STANDARD', 'RECURRING', name='invoicetype'), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'SENT', 'PAID', 'OVERDUE', 'CANCELLED', name='invoicestatus'), nullable=True),
    sa.Column('payment_status', sa.Enum('UNPAID', 'PAID', 'PARTIAL', name='paymentstatus'), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('subtotal', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('discount_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('discount_amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('tax_amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('total_amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('paid_amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('issue_date', sa.Date(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('sent_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('paid_date', sa.Date(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('terms', sa.Text(), nullable=True),
    sa.Column('billing_address', sa.JSON(), nullable=True),
    sa.Column('shipping_address', sa.JSON(), nullable=True),
    sa.Column('pdf_url', sa.String(length=500), nullable=True),
    sa.Column('public_url', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['user_profiles.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('invoice_number')
    )
    op.create_index('idx_invoices_dates', 'invoices', ['issue_date', 'due_date'], unique=False)
    op.create_index('idx_invoices_number', 'invoices', ['invoice_number'], unique=False)
    op.create_index('idx_invoices_owner_client', 'invoices', ['owner_id', 'client_id'], unique=False)
    op.create_index('idx_invoices_payment_status', 'invoices', ['payment_status'], unique=False)
    op.create_index('idx_invoices_status', 'invoices', ['status'], unique=False)
    op.create_table('project_members',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'MEMBER', 'VIEWER', name='projectrole'), nullable=False),
    sa.Column('hourly_rate', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('can_track_time', sa.Boolean(), nullable=True),
    sa.Column('can_create_tasks', sa.Boolean(), nullable=True),
    sa.Column('can_manage_members', sa.Boolean(), nullable=True),
    sa.Column('joined_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_profiles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('project_id', 'user_id', name='unique_project_member')
    )
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('parent_task_id', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('assignee_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('task_type', sa.Enum('FEATURE', 'BUG', 'IMPROVEMENT', name='tasktype'), nullable=True),
    sa.Column('status', sa.Enum('TODO', 'IN_PROGRESS', 'COMPLETED', 'BLOCKED', name='taskstatus'), nullable=True),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='taskpriority'), nullable=True),
    sa.Column('estimated_hours', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('actual_hours', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('due_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('custom_fields', sa.JSON(), nullable=True),
    sa.Column('blocked_reason', sa.Text(), nullable=True),
    sa.Column('completion_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['assignee_id'], ['user_profiles.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['user_profiles.id'], ),
    sa.ForeignKeyConstraint(['parent_task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_tasks_assignee', 'tasks', ['assignee_id'], unique=False)
    op.create_index('idx_tasks_due_date', 'tasks', ['due_date'], unique=False)
    op.create_index('idx_tasks_position', 'tasks', ['project_id', 'position'], unique=False)
    op.create_index('idx_tasks_project_status', 'tasks', ['project_id', 'status'], unique=False)
    op.create_table('invoice_line_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=10, scale=3), nullable=True),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('discount_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('tax_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('item_type', sa.String(length=50), nullable=True),
    sa.Column('subtotal', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('tax_amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('total', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment_records',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('payment_date', sa.Date(), nullable=False),
    sa.Column('payment_method', sa.Enum('BANK_TRANSFER', 'CREDIT_CARD', 'PAYPAL', 'CHECK', 'CASH', name='paymentmethod'), nullable=False),
    sa.Column('reference', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_attachments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('uploaded_by', sa.UUID(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by'], ['user_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_comments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('is_internal', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user_profiles.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tax_line_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('rate', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('time_entries',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ended_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('duration_hours', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('billable', sa.Boolean(), nullable=True),
    sa.Column('hourly_rate', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('entry_type', sa.Enum('WORK', 'MEETING', 'BREAK', name='timeentrytype'), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'SUBMITTED', 'APPROVED', 'REJECTED', 'INVOICED', name='timeentrystatus'), nullable=True),
    sa.Column('submitted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approved_by', sa.UUID(), nullable=True),
    sa.Column('approved_hours', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('rejected_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('rejected_by', sa.UUID(), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('invoice_id', sa.Integer(), nullable=True),
    sa.Column('invoiced_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('started_at <= ended_at', name='time_entry_valid_range'),
    sa.ForeignKeyConstraint(['approved_by'], ['user_profiles.id'], ),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['rejected_by'], ['user_profiles.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_time_entries_billable', 'time_entries', ['billable'], unique=False)
    op.create_index('idx_time_entries_date_range', 'time_entries', ['started_at', 'ended_at'], unique=False)
    op.create_index('idx_time_entries_running', 'time_entries', ['user_id', 'ended_at'], unique=False, postgresql_where='ended_at IS NULL')
    op.create_index('idx_time_entries_status', 'time_entries', ['status'], unique=False)
    op.create_index('idx_time_entries_user_project', 'time_entries', ['user_id', 'project_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_time_entries_user_project', table_name='time_entries')
    op.drop_index('idx_time_entries_status', table_name='time_entries')
    op.drop_index('idx_time_entries_running', table_name='time_entries', postgresql_where='ended_at IS NULL')
    op.drop_index('idx_time_entries_date_range', table_name='time_entries')
    op.drop_index('idx_time_entries_billable', table_name='time_entries')
    op.drop_table('time_entries')
    op.drop_table('tax_line_items')
    op.drop_table('task_comments')
    op.drop_table('task_attachments')
    op.drop_table('payment_records')
    op.drop_table('invoice_line_items')
    op.drop_index('idx_tasks_project_status', table_name='tasks')
    op.drop_index('idx_tasks_position', table_name='tasks')
    op.drop_index('idx_tasks_due_date', table_name='tasks')
    op.drop_index('idx_tasks_assignee', table_name='tasks')
    op.drop_table('tasks')
    op.drop_table('project_members')
    op.drop_index('idx_invoices_status', table_name='invoices')
    op.drop_index('idx_invoices_payment_status', table_name='invoices')
    op.drop_index('idx_invoices_owner_client', table_name='invoices')
    op.drop_index('idx_invoices_number', table_name='invoices')
    op.drop_index('idx_invoices_dates', table_name='invoices')
    op.drop_table('invoices')
    op.drop_index('idx_share_access_logs_share', table_name='share_access_logs')
    op.drop_index('idx_share_access_logs_date', table_name='share_access_logs')
    op.drop_table('share_access_logs')
    op.drop_index('idx_projects_status', table_name='projects')
    op.drop_index('idx_projects_owner_client', table_name='projects')
    op.drop_index('idx_projects_dates', table_name='projects')
    op.drop_table('projects')
    op.drop_index('idx_shares_token', table_name='shares')
    op.drop_index('idx_shares_status', table_name='shares')
    op.drop_index('idx_shares_resource', table_name='shares')
    op.drop_index('idx_shares_owner', table_name='shares')
    op.drop_index('idx_shares_expires', table_name='shares')
    op.drop_table('shares')
    op.drop_index('idx_clients_status', table_name='clients')
    op.drop_index('idx_clients_owner_name', table_name='clients')
    op.drop_table('clients')
    op.drop_table('user_profiles')
    # ### end Alembic commands ###